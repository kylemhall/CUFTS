[% extra_js.push( c.uri_for_js('jquery.selectboxes.js') ) %]
<script>
var CRDB_show_nodata_fields = 0;


function toggle_nodata_fields( ) {
    CRDB_show_nodata_fields = !CRDB_show_nodata_fields;
    nodata_fields();
}

function nodata_fields( ) {
    $('.no_data').each( function(i) {
        this.style.display = CRDB_show_nodata_fields ? '' : 'none';
    });
}

$( function ( ) {
    nodata_fields();
} );


function ajax_get_edit( field, url ) {
    $.ajax({
        type: 'GET',
        url: url,
        dataType: 'html',
        success: function( html ) {
            $('#resource-definition-' + field).find('.field-data').hide();

            $('#resource-definition-' + field).append(
                '<div class="field-editing">' + html + '</div>'
            );

            $('#resource-' + field).find('.resource-edit-control-savecancel').show();
            $('#resource-' + field).find('.resource-edit-control-edit').hide();

       }
    });
}

function ajax_cancel_edit( field ) {
    $('#resource-definition-' + field).find('.field-editing').remove();
    $('#resource-definition-' + field).find('.field-data').show();
    
    $('#resource-' + field).find('.resource-edit-control-savecancel').hide();
    $('#resource-' + field).find('.resource-edit-control-edit').show();
    
}

function ajax_save_edit( field, url ) {
    $.ajax({
       type: 'POST',
       url: url,
       data: $('#resource-definition-' + field).find('.field-editing form').serialize(),
       success: function( html ) {
           $('#resource-' + field).replaceWith( html );
           
           $('#resource-' + field).find('.resource-edit-control-savecancel').hide();
           $('#resource-' + field).find('.resource-edit-control-edit').show();           

           nodata_fields();
       }
    });
}

function delete_subject( subject_id ) {
    CRDB_to_delete[ subject_id ] = 1;
    CRDB_to_add[ subject_id ] = 0;
    
    $('#edit-subjects-add').addOption( subject_id, CRDB_all_subjects[subject_id], false ).sortOptions();
    $('div#edit-all-subjects-' + subject_id).hide();
    
    update_subject_fields();
    
    return false;
}

function add_subject() {
    var subject_id = $('#edit-subjects-add').find("option:selected")[0].value;

    CRDB_to_delete[ subject_id ] = 0;
    CRDB_to_add[ subject_id ] = 1;

    $('#edit-subjects-add').removeOption( subject_id, false );
    $('div#edit-all-subjects-' + subject_id).show();
    
    update_subject_fields();
    
    return false;
}

function update_subject_fields() {
    var key;
    var array = new Array();
    for (key in CRDB_to_add) {
        if ( CRDB_to_add[key] ) {
            array.push(key)
        }
    }
    $('#edit-subjects-add-field').val( array.join(',') );

    array = new Array();
    for (key in CRDB_to_delete) {
        if ( CRDB_to_delete[key] ) {
            array.push(key)
        }
    }
    $('#edit-subjects-delete-field').val( array.join(',') );
}

</script>


 


<style>
.edit-in-place { border: 1px solid #888;}
</style>

<div id="resource">
    
 <div id="resource-name">[% erm.main_name | html %]</div>

 [% IF c.check_user_roles('edit_erm_records') %]<a href="#toggle" onClick="toggle_nodata_fields(); return false;">toggle empty fields</a>[% END %]
 
 <table class="resource-fields"> 
  [% FOREACH display_field IN display_fields %]
   [% PROCESS display_field.tt | trim %]
  [% END %]
 </table>
 
 
</div>


