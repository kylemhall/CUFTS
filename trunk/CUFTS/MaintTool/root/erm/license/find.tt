[% SET uses_ext_form = 1 %]
[% USE url %]

<div id="erm-main-find-form"></div>

<div id="erm-main-results" style="margin-top: 8px;"></div>

<div id="erm-main-selected" style="margin-top: 8px;"></div>

</div>

<script>

// Don't UTF-8 encode
encodeURIComponent=escape;
decodeURIComponent=unescape;

Ext.onReady( function() {
    Ext.BLANK_IMAGE_URL = '[% image_dir _ '/default/s.gif' %]';


    var hash_state = new HashState();

    var handleEmptyCombo = function( combo, record, index ) {
        var v = record.get('id');
        if ( v===undefined || v === null || v==='' ) {
            combo.clearValue();
        }
    };

    var results_store = new Ext.data.JsonStore({
        url: '[% url("$url_base/erm/license/find_json") %]',
        method: 'GET',
        root: 'results',
        totalProperty: 'rowcount',
        fields: [
            'id',
            'key'
        ]
    });
    
    var combo_stores = {};
    combo_stores.boolean_type = new Ext.data.SimpleStore({
        fields: [ 'id', 'display' ],
        data: [ [ null,'&nbsp;' ], [ '1', 'Yes' ], [ '0', 'No' ] ]
    });

    var results_grid = new Ext.grid.GridPanel({
        store: results_store,
        columns: [
           { header: 'key', dataIndex: 'key', width: 450 }
        ],
        sm: new Ext.grid.RowSelectionModel({singleSelect:true}),
        title: 'Search Results',
        width: 900,
        height: 610,
        bbar: new Ext.ux.AdvancedPagingToolbar({
            pageSize: 25,
            displayInfo: true,
            displayMsg: 'Displaying {0} - {1} of {2}',
            emptyMsg: 'No records to display',
            store: results_store,
            hash_state: hash_state
        }),
        listeners: {
            'rowdblclick': function(grid, rowIndex, e) {
                window.location = '[% url("$url_base/erm/license/edit/") %]' + grid.getStore().getAt(rowIndex).get('id');
            }
        }
    });

    var find_form = new Ext.FormPanel({
        frame: false,
        border: false,
        style: 'padding: 5px 3px;',
        id: 'erm-main-find-form',
        items: [
            {
                layout: 'column',
                border: false,
                items: [
                    {
                        layout: 'form',
                        columnWidth: .33,
                        labelWidth: 120,
                        border: false,
                        items: [
                            {
                                name: 'key',
                                fieldLabel: 'Key',
                                value: hash_state.params['key'],
                                xtype: 'textfield',
                                anchor: '95%'
                            }
                        ]
                    },
                    {
                        layout: 'form',
                        columnWidth: .33,
                        labelWidth: 120,
                        border: false,
                        items: [
                            {
                                fieldLabel: 'Allows ILL?',
                                xtype: 'combo',
                                hiddenName: 'allows_ill',
                                store: combo_stores.boolean_type,
                                valueField: 'id',
                                displayField: 'display',
                                mode: 'local',
                                triggerAction: 'all',
                                editable: false,
                                listeners: { 'select': Ext.ux.utils.handleEmptyCombo },
                                value: hash_state.params['allows_ill'],
                                anchor: '95%'
                            }
                        ]
                    },
                    {
                        layout: 'form',
                        columnWidth: .33,
                        labelWidth: 120,
                        border: false,
                        items: [
                            {
                                fieldLabel: 'Allows eReserves?',
                                xtype: 'combo',
                                hiddenName: 'allows_ereserves',
                                store: combo_stores.boolean_type,
                                valueField: 'id',
                                displayField: 'display',
                                mode: 'local',
                                triggerAction: 'all',
                                editable: false,
                                listeners: { 'select': Ext.ux.utils.handleEmptyCombo },
                                value: hash_state.params['allows_ereserves'],
                                anchor: '95%'
                            }
                        ]
                    }
                ]
            }
        ],
        buttons: [
            {
                type: 'submit',
                name: 'search',
                text: 'Search',
                handler: search_action
            },
            {
                type: 'reset',
                name: 'clear',
                text: 'Clear',
                handler: reset_action
            }
        ]
        
    });

    find_form.addListener( 'render', 
        function( ) {
            new Ext.KeyMap( find_form.getEl(), {
                key: Ext.EventObject.ENTER,
                fn: search_action
            });
            find_form.getForm().findField(0).focus( false, 50 );
        }
    );
    
    var find_panel = new Ext.Panel({
        title: 'Find ERM License Records',
        frame: false,
        tbar: new Ext.Toolbar({
            items: [
                new Ext.Button({
                    text: 'Create ERM License Record',
                    iconCls: 'add-button',
                    handler: function() {
                        window.location = '[% url("$url_base/erm/license/create") %]';
                    }
                })
            ]
        }),
        items: [ find_form ],
        width: 900
    })
    
    
    function search_action() {
        var params = find_form.getForm().getValues();
        results_store.baseParams = params;
        var paging = { start: 0, limit: 25 };
        results_store.load( { params: paging } );
        hash_state.params = params;
        hash_state.paging = paging;
        hash_state.setState();
    }
    
    function reset_action() {
        // CAUTION: items.items may not be safe, using private variable to get all fields 
        Ext.each( find_form.getForm().items.items, function( field ) {
            field.setValue('');
        } );
    }


    find_panel.render('erm-main-find-form');
    results_grid.render('erm-main-results');
    
    
    // Restore state
    
    results_store.baseParams = hash_state.params;
    var paging = { start: 0, limit: 25 };
    Ext.apply( paging, hash_state.paging );
    results_store.load( { params: paging } );
});

</script>



